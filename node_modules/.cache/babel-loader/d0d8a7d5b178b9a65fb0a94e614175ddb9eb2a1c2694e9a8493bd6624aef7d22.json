{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-61f31dc7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"result\"\n};\nconst _hoisted_2 = {\n  class: \"image-box\"\n};\nconst _hoisted_3 = {\n  class: \"text-white text-lg\"\n};\nconst _hoisted_4 = {\n  class: \"image\"\n};\nconst _hoisted_5 = {\n  ref: \"panzoomElement\"\n};\nconst _hoisted_6 = [\"width\", \"height\"];\nconst _hoisted_7 = {\n  class: \"roi-manager\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-center text-lg border-b-2 border-green-400\"\n}, \" Points \", -1));\nconst _hoisted_9 = {\n  class: \"roi-points\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"roi-extension\"\n};\nconst _hoisted_12 = {\n  class: \"text-lg\"\n};\nconst _hoisted_13 = {\n  class: \"flex\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"basis-28\"\n}, \"Select All\", -1));\nconst _hoisted_15 = [\"disabled\"];\nconst _hoisted_16 = {\n  class: \"flex\"\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"basis-28\"\n}, \"Distance Map\", -1));\nconst _hoisted_18 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", null, _toDisplayString($props.title), 1)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"canvas\", {\n    ref: \"canvas\",\n    width: $data.canvasWidth,\n    height: $data.canvasHeight\n  }, null, 8, _hoisted_6)], 512)])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.points, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"point\", this.pointClicked[index] && 'bg-green']),\n      onClick: $event => $options.handleClickPoint(index)\n    }, [_createElementVNode(\"span\", null, _toDisplayString(item[0]), 1), _createTextVNode(\" - \"), _createElementVNode(\"span\", null, _toDisplayString(item[1]), 1)], 10, _hoisted_10);\n  }), 128))]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.labelAll = $event),\n    disabled: $data.distanceMap,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.handleAllPoints && $options.handleAllPoints(...args))\n  }, null, 8, _hoisted_15), [[_vModelCheckbox, $data.labelAll]])]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.distanceMap = $event),\n    disabled: $data.labelAll,\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.handleShowDistanceMap && $options.handleShowDistanceMap(...args))\n  }, null, 8, _hoisted_18), [[_vModelCheckbox, $data.distanceMap]])])])])])]);\n}","map":{"version":3,"names":["class","ref","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$props","title","_hoisted_4","_hoisted_5","width","$data","canvasWidth","height","canvasHeight","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","points","item","index","key","_normalizeClass","pointClicked","onClick","$event","$options","handleClickPoint","_createTextVNode","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","type","_cache","labelAll","disabled","distanceMap","args","handleAllPoints","_hoisted_15","_hoisted_16","_hoisted_17","handleShowDistanceMap","_hoisted_18"],"sources":["C:\\Users\\Ninh\\Desktop\\Doan\\DATN-NTT2024\\src\\components\\ImageRes.vue"],"sourcesContent":["<template>\r\n  <div class=\"result\">\r\n    <div class=\"image-box\">\r\n      <div class=\"text-white text-lg\">\r\n        <span>{{ title }}</span>\r\n      </div>\r\n      <div class=\"image\">\r\n        <div ref=\"panzoomElement\">\r\n          <canvas ref=\"canvas\" :width=\"canvasWidth\" :height=\"canvasHeight\"></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"roi-manager\">\r\n      <div class=\"text-center text-lg border-b-2 border-green-400\">\r\n        Points\r\n      </div>\r\n      <div class=\"roi-points\">\r\n        <div v-for=\"(item, index) in this.points\" :key=\"index\" class=\"point\"\r\n             :class=\"this.pointClicked[index] && 'bg-green'\"\r\n             @click=\"handleClickPoint(index)\">\r\n          <span>{{ item[0] }}</span> - <span>{{ item[1] }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"roi-extension\">\r\n        <div class=\"text-lg\">\r\n          <div class=\"flex\">\r\n            <span class=\"basis-28\">Select All</span>\r\n            <input type=\"checkbox\" v-model=\"labelAll\" :disabled=\"distanceMap\" @click=\"handleAllPoints\">\r\n          </div>\r\n          <div class=\"flex\">\r\n            <span class=\"basis-28\">Distance Map</span>\r\n            <input type=\"checkbox\" v-model=\"distanceMap\" :disabled=\"labelAll\" @click=\"handleShowDistanceMap\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport panzoom from 'panzoom';\r\n\r\nexport default {\r\n  name: \"ImageRes\",\r\n  data() {\r\n    return {\r\n      scale: 1, // Initial scale factor\r\n      canvasWidth: 500, // Default canvas width\r\n      canvasHeight: 500, // Default canvas height\r\n      minWidth: 400,\r\n      maxWidth: 500,\r\n      pointClicked: [],\r\n      prevPoint: -1,\r\n      curPoint: -1,\r\n      scaleX: 1,\r\n      scaleY: 1,\r\n      labelAll: false,\r\n      distanceMap: false\r\n    };\r\n  },\r\n  watch: {\r\n    source() {\r\n      this.drawImageOnCanvas();\r\n    }\r\n  },\r\n  mounted() {\r\n    // Initialize Panzoom when the component is mounted\r\n    this.initPanzoom();\r\n\r\n    // init image to canvas object\r\n    this.calculateCanvasSize();\r\n    this.drawImageOnCanvas();\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    alt: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    source: {},\r\n    coordArray: {\r\n      type: Array,\r\n      // eslint-disable-next-line vue/require-valid-default-prop\r\n      default: [],\r\n    },\r\n    points: {\r\n      type: Array,\r\n      // eslint-disable-next-line vue/require-valid-default-prop\r\n      default: [],\r\n    },\r\n    strokeLine: {\r\n      type: String,\r\n      default: '#000000'\r\n    }\r\n  },\r\n  methods: {\r\n    drawBoundary(context, coord) {\r\n      context.beginPath();\r\n      context.strokeStyle = this.strokeLine;\r\n      context.lineWidth = 2;\r\n      context.moveTo(coord[1][0] * this.scaleX, coord[0][0] * this.scaleY);\r\n\r\n      for (let i = 1; i < coord[0].length; i++) {\r\n        context.lineTo(coord[1][i] * this.scaleX, coord[0][i] * this.scaleY);\r\n      }\r\n      context.closePath();\r\n      context.stroke();\r\n    },\r\n    drawDistaceMap(context, points, coord) {\r\n      context.lineWidth = 0.5;\r\n      context.strokeStyle = \"black\";\r\n      for (let i = 0; i < points.length; i++) {\r\n        // draw the boundary points\r\n        for (let j = 0; j < coord[0][0].length; j++) {\r\n          context.beginPath();\r\n          context.moveTo(points[i][1] * this.scaleX, points[i][0] * this.scaleY);\r\n          context.lineTo(coord[i][1][j] * this.scaleX, coord[i][0][j] * this.scaleY);\r\n          context.stroke();\r\n        }\r\n        context.strokeStyle = 'black';\r\n        context.lineWidth = 0.5;\r\n        context.stroke();\r\n      }\r\n    },\r\n    handleShowDistanceMap() {\r\n      const canvas = this.$refs.canvas;\r\n      const context = canvas.getContext(\"2d\");\r\n      if (this.distanceMap == false) {\r\n        this.drawDistaceMap(context, this.points, this.coordArray);\r\n      } else {\r\n        this.drawImageOnCanvas();\r\n      }\r\n    },\r\n    handleAllPoints() {\r\n      const canvas = this.$refs.canvas;\r\n      const context = canvas.getContext(\"2d\");\r\n      if (this.labelAll == false) {\r\n        for (let i = 0; i < this.coordArray.length; i++) {\r\n          this.drawBoundary(context, this.coordArray[i]);\r\n          this.pointClicked[i] = 1;\r\n        }\r\n      } else {\r\n        this.drawImageOnCanvas();\r\n        this.pointClicked = [];\r\n      }\r\n    },\r\n    handleClickPoint(index) {\r\n      if (this.pointClicked[index]) {\r\n        return\r\n      }\r\n      if (this.curPoint != -1) {\r\n        this.prevPoint = this.curPoint;\r\n      }\r\n      this.pointClicked = [];\r\n      this.pointClicked[index] = 1;\r\n      this.curPoint = index;\r\n\r\n      const canvas = this.$refs.canvas;\r\n      const context = canvas.getContext(\"2d\");\r\n      const image = new Image();\r\n      image.src = this.source;\r\n      // Clear the pre boundary\r\n      if (this.prevPoint != -1) {\r\n        context.drawImage(image, 0, 0, this.canvasWidth, this.canvasHeight);\r\n      }\r\n      // Draw new boundary\r\n      this.drawBoundary(context, this.coordArray[this.curPoint]);\r\n    },\r\n    calculateCanvasSize() {\r\n      const image = new Image();\r\n      image.src = this.source;\r\n\r\n      // Calculate the canvas dimensions based on the image's aspect ratio\r\n      image.onload = () => {\r\n        const aspectRatio = image.width / image.height;\r\n\r\n        // Set canvas width within the specified range\r\n        this.canvasWidth = Math.min(Math.max(image.width, this.minWidth), this.maxWidth);\r\n\r\n        // Calculate and set canvas height to maintain the image's aspect ratio\r\n        this.canvasHeight = Math.round(this.canvasWidth / aspectRatio);\r\n\r\n        this.scaleX = this.canvasWidth / image.width;\r\n        this.scaleY = this.canvasHeight / image.height;\r\n      };\r\n    },\r\n    drawImageOnCanvas() {\r\n      return new Promise(() => {\r\n        const canvas = this.$refs.canvas;\r\n        const context = canvas.getContext('2d');\r\n\r\n        const image = new Image();\r\n        image.onload = () => {\r\n          context.drawImage(image, 0, 0, this.canvasWidth, this.canvasHeight);\r\n          // You can add additional drawing logic here if needed\r\n        };\r\n\r\n        image.src = this.source;\r\n      })\r\n    },\r\n    initPanzoom() {\r\n      // Get the panzoom container and target elements using refs\r\n      const container = this.$refs.panzoomElement;\r\n      const target = this.$refs.canvas;\r\n\r\n      // Initialize Panzoom\r\n      const pz = panzoom(target, {\r\n        // You can customize options here\r\n        maxZoom: 10,\r\n        minZoom: 1,\r\n      });\r\n\r\n      // Optional: Add event listeners for additional functionality\r\n      container.addEventListener('wheel', pz.zoomWithWheel);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.result {\r\n  display: flex;\r\n  column-gap: 100px;\r\n  align-items: center;\r\n}\r\n\r\n@media only screen and (max-width: 900px) {\r\n  .result {\r\n    flex-direction: column;\r\n  }\r\n}\r\n\r\n.image-box {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  row-gap: 20px;\r\n  margin-bottom: 100px;\r\n}\r\n\r\n.image {\r\n  border: 1px solid lightgreen;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.image img {\r\n  min-width: 400px;\r\n  min-height: 400px;\r\n  max-width: 500px;\r\n  max-height: 500px;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.roi-manager {\r\n  color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 3px;\r\n  border: 1px solid lightgreen;\r\n  width: 150px;\r\n  /* margin-top: -100px; */\r\n  margin-bottom: 100px;\r\n}\r\n\r\n.roi-points {\r\n  color: #fff;\r\n  max-height: 300px;\r\n  min-height: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: scroll;\r\n}\r\n\r\n.roi-extension {\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n}\r\n\r\n.point {\r\n  display: flex;\r\n  height: 50px;\r\n  font-size: 20px;\r\n  justify-content: center;\r\n  border-bottom: 1px solid lightgreen;\r\n  cursor: pointer;\r\n}\r\n\r\n.bg-green {\r\n  background-color: lightgreen;\r\n  color: #000;\r\n}\r\n</style>\r\n  \r\n\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAoB;;EAG1BA,KAAK,EAAC;AAAO;;EACXC,GAAG,EAAC;AAAgB;mBAPjC;;EAYSD,KAAK,EAAC;AAAa;gEACtBE,mBAAA,CAEM;EAFDF,KAAK,EAAC;AAAiD,GAAC,UAE7D;;EACKA,KAAK,EAAC;AAAY;oBAhB7B;;EAuBWA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAM;iEACfE,mBAAA,CAAwC;EAAlCF,KAAK,EAAC;AAAU,GAAC,YAAU;oBA1B7C;;EA6BeA,KAAK,EAAC;AAAM;iEACfE,mBAAA,CAA0C;EAApCF,KAAK,EAAC;AAAU,GAAC,cAAY;oBA9B/C;;uBACEG,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCJF,mBAAA,CASM,OATNG,UASM,GARJH,mBAAA,CAEM,OAFNI,UAEM,GADJJ,mBAAA,CAAwB,cAAAK,gBAAA,CAAfC,MAAA,CAAAC,KAAK,M,GAEhBP,mBAAA,CAIM,OAJNQ,UAIM,GAHJR,mBAAA,CAEM,OAFNS,UAEM,GADJT,mBAAA,CAA0E;IAAlED,GAAG,EAAC,QAAQ;IAAEW,KAAK,EAAEC,KAAA,CAAAC,WAAW;IAAGC,MAAM,EAAEF,KAAA,CAAAG;cAR7DC,UAAA,E,YAYIf,mBAAA,CAuBM,OAvBNgB,UAuBM,GAtBJC,UAEM,EACNjB,mBAAA,CAMM,OANNkB,UAMM,I,kBALJjB,mBAAA,CAIMkB,SAAA,QArBdC,WAAA,MAiB0CC,MAAM,EAjBhD,CAiBqBC,IAAI,EAAEC,KAAK;yBAAxBtB,mBAAA,CAIM;MAJqCuB,GAAG,EAAED,KAAK;MAAEzB,KAAK,EAjBpE2B,eAAA,EAiBqE,OAAO,OAClDC,YAAY,CAACH,KAAK;MAC9BI,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,gBAAgB,CAACP,KAAK;QACjCvB,mBAAA,CAA0B,cAAAK,gBAAA,CAAjBiB,IAAI,UApBvBS,gBAAA,CAoBoC,KAAG,GAAA/B,mBAAA,CAA0B,cAAAK,gBAAA,CAAjBiB,IAAI,S,MApBpDU,WAAA;eAuBMhC,mBAAA,CAWM,OAXNiC,WAWM,GAVJjC,mBAAA,CASM,OATNkC,WASM,GARJlC,mBAAA,CAGM,OAHNmC,WAGM,GAFJC,WAAwC,E,gBACxCpC,mBAAA,CAA2F;IAApFqC,IAAI,EAAC,UAAU;IA3BlC,uBAAAC,MAAA,QAAAA,MAAA,MAAAV,MAAA,IA2B4CjB,KAAA,CAAA4B,QAAQ,GAAAX,MAAA;IAAGY,QAAQ,EAAE7B,KAAA,CAAA8B,WAAW;IAAGd,OAAK,EAAAW,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEb,QAAA,CAAAc,eAAA,IAAAd,QAAA,CAAAc,eAAA,IAAAD,IAAA,CAAe;cA3BrGE,WAAA,I,kBA2B4CjC,KAAA,CAAA4B,QAAQ,E,KAE1CvC,mBAAA,CAGM,OAHN6C,WAGM,GAFJC,WAA0C,E,gBAC1C9C,mBAAA,CAAiG;IAA1FqC,IAAI,EAAC,UAAU;IA/BlC,uBAAAC,MAAA,QAAAA,MAAA,MAAAV,MAAA,IA+B4CjB,KAAA,CAAA8B,WAAW,GAAAb,MAAA;IAAGY,QAAQ,EAAE7B,KAAA,CAAA4B,QAAQ;IAAGZ,OAAK,EAAAW,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEb,QAAA,CAAAkB,qBAAA,IAAAlB,QAAA,CAAAkB,qBAAA,IAAAL,IAAA,CAAqB;cA/B3GM,WAAA,I,kBA+B4CrC,KAAA,CAAA8B,WAAW,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}