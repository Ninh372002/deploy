{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-49436b3e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"common-table\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport default {\n  __name: 'CommonTable',\n  props: {\n    columns: {\n      type: Array,\n      required: true,\n      validator: value => {\n        return value.every(column => \"key\" in column && \"label\" in column);\n      }\n    },\n    data: {\n      type: Array,\n      required: true\n    }\n  },\n  emits: ['button-click'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const emit = __emit;\n    const handleButtonClick = (row, key) => {\n      emit('button-click', {\n        row,\n        key\n      });\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.columns, column => {\n        return _openBlock(), _createElementBlock(\"th\", {\n          key: column.key\n        }, _toDisplayString(column.label), 1);\n      }), 128))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.data, (row, rowIndex) => {\n        return _openBlock(), _createElementBlock(\"tr\", {\n          key: rowIndex\n        }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.columns, column => {\n          return _openBlock(), _createElementBlock(\"td\", {\n            key: column.key\n          }, [column.type === 'button' ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            class: \"bg-red-500 text-white hover:bg-red-700 focus:ring-sky-300 hover:scale-105 text-sm px-3 py-1 rounded-full shadow-md focus:outline-none focus:ring-2 transition duration-300 ease-in-out transform\",\n            onClick: () => handleButtonClick(row, column.key)\n          }, _toDisplayString(column.buttonText), 9, _hoisted_2)) : (_openBlock(), _createElementBlock(_Fragment, {\n            key: 1\n          }, [_createTextVNode(_toDisplayString(row[column.key]), 1)], 64))]);\n        }), 128))]);\n      }), 128))])])]);\n    };\n  }\n};","map":{"version":3,"names":["emit","__emit","handleButtonClick","row","key"],"sources":["C:/Users/Ninh/Desktop/Doan/DATN-NTT2024/src/components/CommonTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"common-table\">\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th v-for=\"column in columns\" :key=\"column.key\">{{ column.label }}</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(row, rowIndex) in data\" :key=\"rowIndex\">\r\n        <td v-for=\"column in columns\" :key=\"column.key\">\r\n          <template v-if=\"column.type === 'button'\">\r\n            <button\r\n                class=\"bg-red-500 text-white hover:bg-red-700 focus:ring-sky-300 hover:scale-105 text-sm px-3 py-1 rounded-full shadow-md focus:outline-none focus:ring-2 transition duration-300 ease-in-out transform\"\r\n                @click=\"() => handleButtonClick(row, column.key)\">\r\n              {{ column.buttonText }}\r\n            </button>\r\n          </template>\r\n          <template v-else>\r\n            {{ row[column.key] }}\r\n          </template>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits} from 'vue';\r\n\r\ndefineProps({\r\n  columns: {\r\n    type: Array,\r\n    required: true,\r\n    validator: (value) => {\r\n      return value.every((column) => \"key\" in column && \"label\" in column);\r\n    },\r\n  },\r\n  data: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n});\r\nconst emit = defineEmits(['button-click']);\r\n\r\nconst handleButtonClick = (row, key) => {\r\n  emit('button-click', {row, key});\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.common-table {\r\n  margin: 1em 0;\r\n}\r\n\r\n.common-table table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.common-table th,\r\n.common-table td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.common-table td {\r\n  color: #dddddd;\r\n}\r\n\r\n.common-table th {\r\n  background-color: #f4f4f4;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IA4CA,MAAMA,IAAI,GAAGC,MAA6B;IAE1C,MAAMC,iBAAiB,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;MACtCJ,IAAI,CAAC,cAAc,EAAE;QAACG,GAAG;QAAEC;MAAG,CAAC,CAAC;IAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}