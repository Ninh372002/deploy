{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-12aeb836\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center\"\n};\nconst _hoisted_2 = {\n  class: \"bg-white rounded-lg px-6 pt-6 max-w-sm w-full\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-xl font-bold\"\n}, \"Create New Model\", -1));\nconst _hoisted_4 = {\n  class: \"mb-4\"\n};\nconst _hoisted_5 = {\n  class: \"file-upload flex items-center mt-5 item\"\n};\nconst _hoisted_6 = {\n  class: \"flex justify-center mt-3\"\n};\nimport { ref, computed } from 'vue';\nimport FileUpload from '@/components/FileUpload.vue';\nimport CommonInput from \"@/components/CommonInput.vue\";\nimport CommonButton from \"@/components/CommonButton.vue\";\nimport axios from \"axios\";\nimport SpinnerLoading from \"@/components/SpinnerLoading.vue\";\nexport default {\n  __name: 'CreateModelPopupComp',\n  props: {\n    isOpen: {\n      type: Boolean,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const emit = __emit;\n    const selectedFile = ref(null);\n    const isUploadBtnLoading = ref(false);\n    const isTrainingBtnLoading = ref(false);\n    const isFileUploaded = ref(false);\n    const closePopup = () => {\n      emit('close');\n    };\n    const name = ref('');\n    const hasNameEmpty = computed(() => {\n      return name.value.trim() === '';\n    });\n    const submitFile = async () => {\n      const url = 'http://localhost:5000/api/v1.0/upload';\n      isUploadBtnLoading.value = true;\n      if (!selectedFile.value) return;\n      const formData = new FormData();\n      formData.append('file', selectedFile.value);\n      formData.append('modelName', name.value.trim());\n      try {\n        const response = await axios.post(url, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        isFileUploaded.value = true;\n        alert(response.data.message);\n      } catch (error) {\n        console.error(error);\n        alert(error.response.data.message);\n      } finally {\n        isUploadBtnLoading.value = false;\n      }\n    };\n    const trainingModel = async () => {\n      const url = 'http://localhost:5000/api/v1.0/training';\n      isTrainingBtnLoading.value = true;\n      if (!selectedFile.value) return;\n      const formData = new FormData();\n      formData.append('modelName', name.value.trim());\n      try {\n        const response = await axios.post(url, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert(response.data.message);\n      } catch (error) {\n        console.error(error);\n        alert(error.response.data.message);\n      } finally {\n        isTrainingBtnLoading.value = false;\n      }\n    };\n    return (_ctx, _cache) => {\n      return __props.isOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n        class: \"flex justify-between items-center mb-4\"\n      }, [_hoisted_3, _createElementVNode(\"button\", {\n        onClick: closePopup,\n        class: \"text-gray-700\"\n      }, \"Ã—\")]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(CommonInput, {\n        label: \"Model Name\",\n        placeholder: \"Enter your model name\",\n        modelValue: name.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => name.value = $event)\n      }, null, 8, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(FileUpload, {\n        modelValue: selectedFile.value,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => selectedFile.value = $event)\n      }, null, 8, [\"modelValue\"]), _createVNode(CommonButton, {\n        onClick: submitFile,\n        disabled: !selectedFile.value || hasNameEmpty.value || isFileUploaded.value,\n        name: \"Upload\",\n        \"is-loading\": isUploadBtnLoading.value,\n        customClasses: 'h-8 w-28 text-xs bg-'\n      }, {\n        default: _withCtx(() => [isUploadBtnLoading.value ? (_openBlock(), _createBlock(SpinnerLoading, {\n          key: 0,\n          size: \"small\",\n          colorProp: \"grey\"\n        })) : _createCommentVNode(\"\", true)]),\n        _: 1\n      }, 8, [\"disabled\", \"is-loading\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(CommonButton, {\n        onClick: trainingModel,\n        disabled: !isFileUploaded.value,\n        name: \"Training\"\n      }, {\n        default: _withCtx(() => [isTrainingBtnLoading.value ? (_openBlock(), _createBlock(SpinnerLoading, {\n          key: 0,\n          size: \"small\",\n          colorProp: \"grey\"\n        })) : _createCommentVNode(\"\", true)]),\n        _: 1\n      }, 8, [\"disabled\"])])])])])) : _createCommentVNode(\"\", true);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","FileUpload","CommonInput","CommonButton","axios","SpinnerLoading","emit","__emit","selectedFile","isUploadBtnLoading","isTrainingBtnLoading","isFileUploaded","closePopup","name","hasNameEmpty","value","trim","submitFile","url","formData","FormData","append","response","post","headers","alert","data","message","error","console","trainingModel"],"sources":["C:/Users/Ninh/Desktop/Doan/DATN-NTT2024/src/components/CreateModelPopupComp.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"isOpen\" class=\"fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center\">\r\n    <div class=\"bg-white rounded-lg px-6 pt-6 max-w-sm w-full\">\r\n      <div class=\"flex justify-between items-center mb-4\">\r\n        <h2 class=\"text-xl font-bold\">Create New Model</h2>\r\n        <button @click=\"closePopup\" class=\"text-gray-700\">&times;</button>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <CommonInput\r\n            label=\"Model Name\"\r\n            placeholder=\"Enter your model name\"\r\n            v-model=\"name\"\r\n        />\r\n        <div class=\"file-upload flex items-center mt-5 item\">\r\n          <FileUpload v-model=\"selectedFile\"/>\r\n          <CommonButton\r\n              @click=\"submitFile\"\r\n              :disabled=\"!selectedFile || hasNameEmpty || isFileUploaded\"\r\n              name=\"Upload\"\r\n              :is-loading=\"isUploadBtnLoading\"\r\n              :customClasses=\"'h-8 w-28 text-xs bg-'\"\r\n          >\r\n            <SpinnerLoading v-if=\"isUploadBtnLoading\" size=\"small\" colorProp=\"grey\"/>\r\n          </CommonButton>\r\n\r\n        </div>\r\n        <div class=\"flex justify-center mt-3\">\r\n          <CommonButton\r\n              @click=\"trainingModel\"\r\n              :disabled=\"!isFileUploaded\"\r\n              name=\"Training\"\r\n          >\r\n            <SpinnerLoading v-if=\"isTrainingBtnLoading\" size=\"small\" colorProp=\"grey\"/>\r\n          </CommonButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, ref, computed} from 'vue';\r\nimport FileUpload from '@/components/FileUpload.vue';\r\nimport CommonInput from \"@/components/CommonInput.vue\";\r\nimport CommonButton from \"@/components/CommonButton.vue\";\r\nimport axios from \"axios\";\r\nimport SpinnerLoading from \"@/components/SpinnerLoading.vue\";\r\n\r\ndefineProps({\r\n  isOpen: {\r\n    type: Boolean,\r\n    required: true,\r\n  },\r\n});\r\nconst emit = defineEmits(['close']);\r\nconst selectedFile = ref(null);\r\nconst isUploadBtnLoading = ref(false)\r\nconst isTrainingBtnLoading = ref(false)\r\nconst isFileUploaded = ref(false)\r\n\r\nconst closePopup = () => {\r\n  emit('close');\r\n};\r\n\r\nconst name = ref('');\r\nconst hasNameEmpty = computed(() => {\r\n  return name.value.trim() === '';\r\n});\r\n\r\nconst submitFile = async () => {\r\n  const url = 'http://localhost:5000/api/v1.0/upload';\r\n  isUploadBtnLoading.value = true;\r\n\r\n  if (!selectedFile.value) return;\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', selectedFile.value);\r\n  formData.append('modelName', name.value.trim());\r\n\r\n  try {\r\n    const response = await axios.post(url, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    isFileUploaded.value = true;\r\n    alert(response.data.message);\r\n  } catch (error) {\r\n    console.error(error);\r\n    alert(error.response.data.message);\r\n  } finally {\r\n    isUploadBtnLoading.value = false;\r\n  }\r\n}\r\n\r\nconst trainingModel = async () => {\r\n  const url = 'http://localhost:5000/api/v1.0/training';\r\n  isTrainingBtnLoading.value = true\r\n\r\n  if (!selectedFile.value) return;\r\n\r\n  const formData = new FormData();\r\n  formData.append('modelName', name.value.trim());\r\n\r\n  try {\r\n    const response = await axios.post(url, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    alert(response.data.message);\r\n  } catch (error) {\r\n    console.error(error);\r\n    alert(error.response.data.message);\r\n  } finally {\r\n    isTrainingBtnLoading.value = false;\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Add custom styles if necessary */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}