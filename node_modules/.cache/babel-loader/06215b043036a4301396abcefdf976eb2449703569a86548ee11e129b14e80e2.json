{"ast":null,"code":"import { renderSlot as _renderSlot, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, createBlock as _createBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3c3b0a7c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"type\", \"disabled\"];\nconst _hoisted_2 = {\n  key: 1\n};\nimport SpinnerLoading from \"@/components/SpinnerLoading.vue\";\nexport default {\n  __name: 'CommonButton',\n  props: {\n    name: {\n      type: String\n    },\n    isLoading: {\n      type: Boolean\n    },\n    type: {\n      type: String,\n      default: 'button'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    customClasses: {\n      type: String,\n      default: ''\n    }\n  },\n  emits: ['click'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const props = __props;\n    const emits = __emit;\n    const handleClick = event => {\n      if (!props.disabled) {\n        emits('click', event);\n      }\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"button\", {\n        type: __props.type,\n        disabled: __props.disabled,\n        onClick: handleClick,\n        class: _normalizeClass(['text-sm px-3 py-1 rounded-full shadow-md focus:outline-none focus:ring-2 transition duration-300 ease-in-out transform', {\n          'bg-sky-500 text-white hover:bg-sky-600 focus:ring-sky-300 hover:scale-105': !__props.disabled,\n          'bg-gray-400 text-gray-700 cursor-not-allowed': __props.disabled,\n          'relative bg-sky-600/30 h-8 w-20 pl-16 pt-4': __props.isLoading\n        }, __props.customClasses])\n      }, [!__props.isLoading ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [__props.name === undefined ? _renderSlot(_ctx.$slots, \"default\", {\n        key: 0\n      }) : _createCommentVNode(\"\", true), __props.name !== undefined ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString(__props.name), 1)) : _createCommentVNode(\"\", true)], 64)) : (_openBlock(), _createBlock(SpinnerLoading, {\n        key: 1,\n        size: \"small\",\n        colorProp: \"grey\"\n      }))], 10, _hoisted_1);\n    };\n  }\n};","map":{"version":3,"names":["SpinnerLoading","props","__props","emits","__emit","handleClick","event","disabled"],"sources":["C:/Users/Ninh/Desktop/Doan/DATN-NTT2024/src/components/CommonButton.vue"],"sourcesContent":["<template>\r\n  <button\r\n      :type=\"type\"\r\n      :disabled=\"disabled\"\r\n      @click=\"handleClick\"\r\n      :class=\"[\r\n      'text-sm px-3 py-1 rounded-full shadow-md focus:outline-none focus:ring-2 transition duration-300 ease-in-out transform',\r\n      {\r\n        'bg-sky-500 text-white hover:bg-sky-600 focus:ring-sky-300 hover:scale-105': !disabled,\r\n        'bg-gray-400 text-gray-700 cursor-not-allowed': disabled,\r\n        'relative bg-sky-600/30 h-8 w-20 pl-16 pt-4': isLoading\r\n      },\r\n      customClasses\r\n    ]\"\r\n  >\r\n    <template v-if=\"!isLoading\">\r\n      <slot v-if=\"name === undefined\"/>\r\n      <span v-if=\"name !== undefined\">{{ name }}</span>\r\n    </template>\r\n    <template v-else>\r\n      <SpinnerLoading size=\"small\" colorProp=\"grey\"/>\r\n    </template>\r\n  </button>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits} from 'vue';\r\nimport SpinnerLoading from \"@/components/SpinnerLoading.vue\";\r\n\r\nconst props = defineProps({\r\n  name: {\r\n    type: String,\r\n  },\r\n  isLoading: {\r\n    type: Boolean,\r\n  },\r\n  type: {\r\n    type: String,\r\n    default: 'button',\r\n  },\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  customClasses: {\r\n    type: String,\r\n    default: '',\r\n  }\r\n});\r\n\r\nconst emits = defineEmits(['click']);\r\n\r\nconst handleClick = (event) => {\r\n  if (!props.disabled) {\r\n    emits('click', event);\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Add custom styles if necessary */\r\n</style>\r\n"],"mappings":";;;;;;AA2BA,OAAOA,cAAc,MAAM,iCAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;;IAE5D,MAAMC,KAAK,GAAGC,OAmBZ;IAEF,MAAMC,KAAK,GAAGC,MAAsB;IAEpC,MAAMC,WAAW,GAAIC,KAAK,IAAK;MAC7B,IAAI,CAACL,KAAK,CAACM,QAAQ,EAAE;QACnBJ,KAAK,CAAC,OAAO,EAAEG,KAAK,CAAC;MACvB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}